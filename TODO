General:

Objective-C formatting:
  ☐ Choose how to align labels
  ☐ Add more comments
  ☐ Add nil tests to catch initialization problems
  ✔ Move init_arp in cocoa/utils_stubs @done(2015-10-31 00:30) @project(Objective-C formatting)

Cocoa specific:
  ✔ Remove application t type @unsure @done(2015-10-20 21:59) @project(Cocoa specific)
  ✔ Separate functions for all window methods @done(2015-10-20 20:16) @project(Cocoa specific)
  ✔ Make use of Delegate or remove @done(2015-10-20 22:03) @project(Cocoa specific)
  ✔ Add menus to application @done(2015-10-20 21:34) @project(Cocoa specific)
  ☐ Add menus without plagiarizing SFML @option(parametrize)
  ✔ Menus should be clickable on launch @issue @done(2015-10-26 22:19) @project(Cocoa specific)
  ✔ Implement applicationName of OGApplication @unsure @done(2015-10-20 21:14) @project(Cocoa specific)
  ✔ Close application when all windows are (through delegate probably) @done(2015-10-20 22:03) @project(Cocoa specific)
  ✔ Guarantee application is init only once @important @done(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Continue window implementation @done(2015-10-26 01:43) @project(Cocoa specific)
  ✘ See if close shouldn't be used instead of performClose @cancelled(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Remove quiting when all window closed @done(2015-10-26 01:46) @project(Cocoa specific)
  ✔ Add handling of events (like application quitting) @done(2015-10-26 22:19) @project(Cocoa specific)
  ☐ Add some option to switch between Ctrl and Cmd @question
  ☐ Add some function to handle keyRepeatDelay and keyRepeatInterval for NSEvent
  ✔ Handle application creation and running with a boolean @done(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Implement window destroy properly @done(2015-10-26 02:04) @project(Cocoa specific)
  ✔ Add window closed event @done(2015-10-31 00:30) @project(Cocoa specific)
  ☐ Update the view (and probably other things) when resizing
  ☐ Handle left/right modifiers for keycodes
  ☐ Discuss the possibility to dissociate mouse and cursor to get delta events @source(https://developer.apple.com/library/mac/documentation/GraphicsImaging/Reference/Quartz_Services_Ref/#//apple_ref/c/func/CGAssociateMouseAndMouseCursorPosition)
  ☐ Differentiate between Middle and Other for mouse
  ✔ Every size might have been specified in points for Cocoa, use scale whenever necessary @important @review @comment(At least for the events, but it might also be wrong in window size definition) @done(2015-11-02 16:35) @project(Cocoa specific)
  ☐ Check if window size is in points instead of pixels

Xlib specific:
  ✔ Match on clientmessage in ogamlWindow_xlib for safety @done(2015-10-20 20:29) @project(Xlib specific)
  ✘ Avoid re-creating events (should profile before) -- takes 4e-7 sec @cancelled(2015-10-20 21:06) @project(Xlib specific)
  ✔ Remove unsafe casts of events @done(2015-10-20 21:10) @project(Xlib specific)
  ✔ Extract data from key presses @done(2015-10-21 16:42) @project(Xlib specific)
  ✔ Extract data from button presses @done(2015-10-21 12:55) @project(Xlib specific)
  ✔ Extract data from cursor movement @done(2015-10-21 16:57) @project(Xlib specific)
  ✔ Handle different keyboard layouts (and handle keys better) -- current version should be okay for a while @done(2015-10-23 09:46) @project(Xlib specific)
  ✔ Implement caml_glx_choose_visual @done(2015-10-23 23:01) @project(Xlib specific)
  ✔ Implement caml_glx_create_context @done(2015-10-23 23:24) @project(Xlib specific)
  ✔ Implement caml_glx_make_current @done(2015-10-23 23:24) @project(Xlib specific)
  ✔ Implement caml_glx_swap_buffers @done(2015-10-23 23:24) @project(Xlib specific)
  ✔ Correctly free glx calls when destroying window @done(2015-10-28 09:43) @project(Xlib specific)
  ✔ Binding GLX ** (later) @done(2015-10-28 09:43) @project(Xlib specific)

General:
  ☐ Make a log system ? @unsure @comment(Théo: It might be redundant if the user uses dolog for instance, but it also occured to me we could provide one)

Window part:
  ✔ Add keys enumeration @done(2015-10-23 09:46) @project(Window part)
  ✔ Add buttons enumeration @done(2015-10-23 09:50) @project(Window part)
  ✔ Parameterize Keypressed/Keyreleased events with key @commented_out @done(2015-10-31 23:58) @project(Window part)
  ✔ Parameterize Button events with position & button @commented_out @done(2015-10-31 23:58) @project(Window part)
  ✔ Parameterize Movement events with position @commented_out @done(2015-10-31 23:58) @project(Window part)
  ✘ Put shared code directly in ogamlWindow.ml (like the Event module ?) -- use packs @cancelled(2015-10-21 17:45) @project(Window part)
  ☐ Window titles
  ☐ Window attributes abstract type ? May contain title, size, etc @unsure
  ☐ Same for GL context attributes ? @unsure
  ☐ Real-time state Keyboard module
  ✔ Real-time state Mouse module @done(2015-11-01 23:59) @project(Window part)
  ✔ Graphical functions display & clear - requires binding GLX for X11 ** @done(2015-10-29 18:33) @project(Window part)

Math part:
  ✔ Fix a notation convention @done(2015-10-29 18:32) @project(Math part)
  ✔ Implement Vector3f @done(2015-10-24 10:07) @project(Math part)
  ✔ Write a Makefile @done(2015-10-24 10:12) @project(Math part)
  ✔ Write tests @done(2015-10-29 18:32) @project(Math part)
  ✔ Implement Matrix3f @done(2015-10-24 11:10) @project(Math part)
  ☐ Implement Vector3i
  ✔ Add more complex functions to matrix3f (look_at, clipping, etc...) @done(2015-10-24 11:55) @project(Math part)
  ✔ Debug matrices... Really @done(2015-10-25 09:17) @project(Math part)
  ✔ Recode inverse matrices after debugging @done(2015-10-25 09:20) @project(Math part)
  ☐ Matrices and vector exceptions
  ✔ Implement Quaternions @done(2015-11-01 00:03) @project(Math part)
  ✔ Implement polygons @done(2015-10-26 16:33) @project(Math part)
  ☐ Parameterize Poly.axis with vector3f
  ✔ Rename matrix3f in matrix3D @done(2015-10-30 10:08) @project(Math part)

GL part:
  ☐ Let the user choose the usage of a vbo when setting data
  ✔ Implement glGetString in config for debug @done(2015-10-29 13:21) @project(GL part)
  ✔ Bind face culling, front_face @done(2015-10-26 21:31) @project(GL part)
  ✔ Bind gl_enable and options @done(2015-10-26 19:35) @project(GL part)
  ✔ Bind clear_color @done(2015-10-26 21:31) @project(GL part)
  ✔ Bind shaders @done(2015-10-26 16:01) @project(GL part)
  ✔ Bind programs & locations @done(2015-10-26 21:15) @project(GL part)
  ✔ Bind polygon mode @done(2015-10-29 14:54) @project(GL part)
  ✔ Bind VAOs & attributes @done(2015-10-27 10:57) @project(GL part)
  ✔ Bind uniform setting @done(2015-10-26 23:08) @project(GL part)
  ✔ Reabstract types in buffers and program after debugging @done(2015-10-27 12:20) @project(GL part)
  ✘ Merge Math and GL modules, or make GL depend on Math (for uniform setting) -- would remove generality of matrix uniforms @cancelled(2015-10-28 09:36) @project(GL part)
  ✔ Add a Matrix3D uniform and remove the conversion matrix -> bigarray @unsure @done(2015-10-30 10:43) @project(GL part)
  ☐ Better support for uint uniforms and array uniforms
  ✘ Make a pervasives modules or something to hold clear, types, etc... -- moved in buffers @cancelled(2015-10-29 15:04) @project(GL part)
  ✘ Find a way to strongly type VAOs/VBOs ? -- probably way too difficult @cancelled(2015-10-29 15:05) @project(GL part)
  ✔ Reorganize VAOs @done(2015-10-29 15:06) @project(GL part)
  ✔ Fix shader compilation not returning an error when failing (use glGetShaderiv with GL_COMPILE_STATUS) @done(2015-10-29 15:59) @project(GL part)
  ✔ Add version option when compiling shaders @done(2015-10-29 15:44) @project(GL part)
  ✔ Implement BMP @done(2015-11-02 18:44) @project(GL part)
  ☐ Implement PNG
  ☐ Implement JPG
  ☐ Implement Image
  ✔ Implement Texture @done(2015-11-02 20:07) @project(GL part)
  ☐ Organize image parsing
  ☐ Better support for all formats (for example 24,32 bit bmps)
  ☐ Add other kinds of textures
  ✔ Let the user choose the active texture when binding @done(2015-11-02 20:07) @project(GL part)
