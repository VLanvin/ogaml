Objective-C formatting:
  ☐ Choose how to align labels
  ☐ Add more comments
  ☐ Add nil tests to catch initialization problems

Cocoa specific:
  ☐ Add menus without plagiarizing SFML @option(parametrize)
  ☐ Add some option to switch between Ctrl and Cmd @question
  ☐ Add some function to handle keyRepeatDelay and keyRepeatInterval for NSEvent
  ☐ Consider converting every event to OGEvent before pushing (instead of having both NSEvent and OGEvent) @unsure
  ☐ Update the view (and probably other things) when resizing
  ☐ Handle left/right modifiers for keycodes
  ☐ Apparently modifiers do not raise keyDown at all so we have to deal with it
  ☐ Discuss the possibility to dissociate mouse and cursor to get delta events @source(https://developer.apple.com/library/mac/documentation/GraphicsImaging/Reference/Quartz_Services_Ref/#//apple_ref/c/func/CGAssociateMouseAndMouseCursorPosition)
  ☐ Differentiate between Middle and Other for mouse
  ☐ Check if window size is in points instead of pixels
  ☐ Window doesn't resign being key on mission control

OgamlCore:
  ☐ Log system
  ☐ Window titles
  ☐ Context customisation
  ☐ Encapsulate parameters (title, depth buffer size, etc..)

OgamlMath:
  ☐ Matrices, quaternions and vector exceptions

OgamlGraphics:
  ✔ Better normal computations in Model @done(2015-11-15 23:22) @project(OgamlGraphics)
  ✔ Indexing in Model @done(2015-11-16 22:55) @project(OgamlGraphics)
  ✔ Clean unused data in Models @done(2015-11-16 22:55) @project(OgamlGraphics)
  ✔ Custom vertex arrays @done(2015-11-29 00:43) @project(OgamlGraphics)
  ✔ Test VertexMaps !!! @done(2015-11-29 18:55) @project(OgamlGraphics)
  ☐ OgamlMath interface
  ☐ Poly export to Model
  ☐ Model merging
  ☐ Sources merging
  ☐ Put vector2f/2i everywhere (instead of pairs)
  ✔ Implement PNG parsing @done(2015-11-30 09:19) @project(OgamlGraphics)
  ✔ Implement JPG parsing @done(2015-11-30 09:19) @project(OgamlGraphics)
  ✘ Organize image parsing in modules @cancelled(2015-11-30 09:19) @project(OgamlGraphics)
  ✔ Better support for all formats (for example 24,32 bit bmps) @done(2015-11-30 09:19) @project(OgamlGraphics)
  ☐ Alpha !
  ✔ Destroy VAOs, VBOs, EBOs, programs in Gc.finalize @done(2015-11-26 23:17) @project(OgamlGraphics)
  ☐ Remove state from Texture.create ?

Shape:
  ✔ Change the notion of corner of a Shape (it wouldn't work for circles for instance) @done(2015-11-25 21:51) @project(Shape)
  ✔ Add circles (as regular polygons) @done(2015-11-25 21:51) @project(Shape)
  ✔ Add scale @done(2015-11-22 20:33) @project(Shape)
  ☐ Floats of ints for position?
  ✔ Add thickness @done(2015-11-26 01:00) @project(Shape)
  ✔ Fix connectivity for outline @done(2015-11-27 01:02) @project(Shape)
  ✔ Pick inset / outward whatever @done(2015-11-26 12:20) @project(Shape)
  ✔ Add color for outline @done(2015-11-27 01:02) @project(Shape)
  ✔ Fix scaling for outline @done(2015-11-27 16:55) @project(Shape)
  ✔ Add lines @done(2015-11-27 18:13) @project(Shape)

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
  ✔ Move init_arp in cocoa/utils_stubs @done(2015-10-31 00:30) @project(Objective-C formatting)
  ✔ Remove application t type @unsure @done(2015-10-20 21:59) @project(Cocoa specific)
  ✔ Separate functions for all window methods @done(2015-10-20 20:16) @project(Cocoa specific)
  ✔ Make use of Delegate or remove @done(2015-10-20 22:03) @project(Cocoa specific)
  ✔ Add menus to application @done(2015-10-20 21:34) @project(Cocoa specific)
  ✔ Menus should be clickable on launch @issue @done(2015-10-26 22:19) @project(Cocoa specific)
  ✔ Implement applicationName of OGApplication @unsure @done(2015-10-20 21:14) @project(Cocoa specific)
  ✔ Close application when all windows are (through delegate probably) @done(2015-10-20 22:03) @project(Cocoa specific)
  ✔ Guarantee application is init only once @important @done(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Continue window implementation @done(2015-10-26 01:43) @project(Cocoa specific)
  ✘ See if close shouldn't be used instead of performClose @cancelled(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Remove quiting when all window closed @done(2015-10-26 01:46) @project(Cocoa specific)
  ✔ Add handling of events (like application quitting) @done(2015-10-26 22:19) @project(Cocoa specific)
  ✔ Key events should be converted to OGEvent to save the modifier flags of the time it is raised and not handled @done(2015-11-07 19:26) @project(Cocoa specific)
  ✔ Handle application creation and running with a boolean @done(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Implement window destroy properly @done(2015-10-26 02:04) @project(Cocoa specific)
  ✔ Add window closed event @done(2015-10-31 00:30) @project(Cocoa specific)
  ✔ Every size might have been specified in points for Cocoa, use scale whenever necessary @important @review @comment(At least for the events, but it might also be wrong in window size definition) @done(2015-11-02 16:35) @project(Cocoa specific)
  ✔ Match on clientmessage in ogamlWindow_xlib for safety @done(2015-10-20 20:29) @project(Xlib specific)
  ✘ Avoid re-creating events (should profile before) -- takes 4e-7 sec @cancelled(2015-10-20 21:06) @project(Xlib specific)
  ✔ Remove unsafe casts of events @done(2015-10-20 21:10) @project(Xlib specific)
  ✔ Extract data from key presses @done(2015-10-21 16:42) @project(Xlib specific)
  ✔ Extract data from button presses @done(2015-10-21 12:55) @project(Xlib specific)
  ✔ Extract data from cursor movement @done(2015-10-21 16:57) @project(Xlib specific)
  ✔ Handle different keyboard layouts (and handle keys better) -- current version should be okay for a while @done(2015-10-23 09:46) @project(Xlib specific)
  ✔ Implement caml_glx_choose_visual @done(2015-10-23 23:01) @project(Xlib specific)
  ✔ Implement caml_glx_create_context @done(2015-10-23 23:24) @project(Xlib specific)
  ✔ Implement caml_glx_make_current @done(2015-10-23 23:24) @project(Xlib specific)
  ✔ Implement caml_glx_swap_buffers @done(2015-10-23 23:24) @project(Xlib specific)
  ✔ Correctly free glx calls when destroying window @done(2015-10-28 09:43) @project(Xlib specific)
  ✔ Binding GLX ** (later) @done(2015-10-28 09:43) @project(Xlib specific)
  ✔ Add keys enumeration @done(2015-10-23 09:46) @project(Window part)
  ✔ Add buttons enumeration @done(2015-10-23 09:50) @project(Window part)
  ✔ Parameterize Keypressed/Keyreleased events with key @commented_out @done(2015-10-31 23:58) @project(Window part)
  ✔ Parameterize Button events with position & button @commented_out @done(2015-10-31 23:58) @project(Window part)
  ✔ Parameterize Movement events with position @commented_out @done(2015-10-31 23:58) @project(Window part)
  ✘ Put shared code directly in ogamlWindow.ml (like the Event module ?) -- use packs @cancelled(2015-10-21 17:45) @project(Window part)
  ✔ Maybe merge window_impl and mouse_impl... it would probably be cleaner @done(2015-11-08 12:42) @project(Window part)
  ✔ Real-time state Keyboard module @done(2015-11-09 16:56) @project(Window part)
  ✔ Real-time state Mouse module @done(2015-11-01 23:59) @project(Window part)
  ✔ Graphical functions display & clear - requires binding GLX for X11 ** @done(2015-10-29 18:33) @project(Window part)
  ✔ Base @done(2015-11-08 13:59) @project(New GL Implementation)
  ✔ Implement State @done(2015-11-04 15:10) @project(New GL Implementation)
  ✔ Implement Internal.Texture @done(2015-11-05 00:25) @project(New GL Implementation)
  ✔ Implement Texture @done(2015-11-05 01:22) @project(New GL Implementation)
  ✔ Implement Internal.Shader @done(2015-11-05 10:44) @project(New GL Implementation)
  ✘ Implement Shader -- Hidden in program @cancelled(2015-11-05 10:45) @project(New GL Implementation)
  ✔ Implement Internal.Program @done(2015-11-05 13:09) @project(New GL Implementation)
  ✔ Implement Program @done(2015-11-05 20:06) @project(New GL Implementation)
  ✔ Implement Internal.VBO @done(2015-11-06 10:07) @project(New GL Implementation)
  ✔ Implement Internal.VAO @done(2015-11-06 10:07) @project(New GL Implementation)
  ✔ Implement Uniform @done(2015-11-06 11:04) @project(New GL Implementation)
  ✔ Implement DrawParameter @done(2015-11-06 10:33) @project(New GL Implementation)
  ✔ Implement VertexArray @done(2015-11-06 19:02) @project(New GL Implementation)
  ✔ Update State @done(2015-11-06 18:08) @project(New GL Implementation)
  ✔ Hide State.t in Window @done(2015-11-06 19:56) @project(New GL Implementation)
  ✔ Implement window draw and clear functions @done(2015-11-06 22:18) @project(New GL Implementation)
  ✔ Rework cube test @done(2015-11-06 23:31) @project(New GL Implementation)
  ✔ Add error for shader creation @done(2015-11-08 13:20) @project(New GL Implementation)
  ✔ Add error for program creation @done(2015-11-08 13:20) @project(New GL Implementation)
  ✔ Better program creation (auto versioning) @done(2015-11-08 12:50) @project(New GL Implementation)
  ✔ Hide uniform & attribute locations ? @done(2015-11-08 13:26) @project(New GL Implementation)
  ✔ Move Uniform externals to Internal and remove all Field(data,0) in uniform bindings @done(2015-11-08 13:40) @project(New GL Implementation)
  ✔ Hide Data.t ? & more data conversions @done(2015-11-06 17:57) @project(New GL Implementation)
  ✔ Safe destroy function for VertexArrays @done(2015-11-08 13:45) @project(New GL Implementation)
  ✔ Clean Enum according to what can be hidden in Internal @done(2015-11-08 13:59) @project(New GL Implementation)
  ✔ Hide core functions in low-level submodules (like Program.LL.bind) @done(2015-11-09 00:42) @project(New GL Implementation)
  ✔ Fix a notation convention @done(2015-10-29 18:32) @project(Math part)
  ✔ Implement Vector3f @done(2015-10-24 10:07) @project(Math part)
  ✔ Write a Makefile @done(2015-10-24 10:12) @project(Math part)
  ✔ Write tests @done(2015-10-29 18:32) @project(Math part)
  ✔ Implement Matrix3f @done(2015-10-24 11:10) @project(Math part)
  ✔ Implement Vector3i @done(2015-11-10 11:27) @project(Math part)
  ✔ Implement Vector2i and Vector2f @done(2015-11-10 11:27) @project(Math part)
  ✔ Add more complex functions to matrix3f (look_at, clipping, etc...) @done(2015-10-24 11:55) @project(Math part)
  ✔ Debug matrices... Really @done(2015-10-25 09:17) @project(Math part)
  ✔ Recode inverse matrices after debugging @done(2015-10-25 09:20) @project(Math part)
  ✔ Implement Quaternions @done(2015-11-01 00:03) @project(Math part)
  ✔ Implement polygons @done(2015-10-26 16:33) @project(Math part)
  ✔ Parameterize Poly.axis with vector3f @done(2015-11-08 15:45) @project(Math part)
  ✔ Rename matrix3f in matrix3D @done(2015-10-30 10:08) @project(Math part)
  ✔ Implement indexing (high priority !!) @done(2015-11-02 21:38) @project(GL part)
  ✔ Parameterize clear with color, remove call to Internal from example @done(2015-11-10 17:20) @project(GL part)
  ✔ Better clear @done(2015-11-10 17:20) @project(GL part)
  ✔ More uniforms @done(2015-11-10 23:50) @project(GL part)
  ✔ Implement OBJ loading in Model @done(2015-11-09 00:43) @project(GL part)
  ✔ Move Polys to GL and output models rather than float arrays @done(2015-11-08 15:45) @project(GL part)
  ✔ Implement glGetString in config for debug @done(2015-10-29 13:21) @project(GL part)
  ✔ Bind face culling, front_face @done(2015-10-26 21:31) @project(GL part)
  ✔ Bind gl_enable and options @done(2015-10-26 19:35) @project(GL part)
  ✔ Bind clear_color @done(2015-10-26 21:31) @project(GL part)
  ✔ Bind shaders @done(2015-10-26 16:01) @project(GL part)
  ✔ Bind programs & locations @done(2015-10-26 21:15) @project(GL part)
  ✔ Bind polygon mode @done(2015-10-29 14:54) @project(GL part)
  ✔ Bind VAOs & attributes @done(2015-10-27 10:57) @project(GL part)
  ✔ Bind uniform setting @done(2015-10-26 23:08) @project(GL part)
  ✔ Reabstract types in buffers and program after debugging @done(2015-10-27 12:20) @project(GL part)
  ✘ Merge Math and GL modules, or make GL depend on Math (for uniform setting) -- would remove generality of matrix uniforms @cancelled(2015-10-28 09:36) @project(GL part)
  ✔ Add a Matrix3D uniform and remove the conversion matrix -> bigarray @unsure @done(2015-10-30 10:43) @project(GL part)
  ✘ Better support for uint uniforms and array uniforms @cancelled(2015-11-08 15:45) @project(GL part)
  ✘ Make a pervasives modules or something to hold clear, types, etc... -- moved in buffers @cancelled(2015-10-29 15:04) @project(GL part)
  ✘ Find a way to strongly type VAOs/VBOs ? -- probably way too difficult @cancelled(2015-10-29 15:05) @project(GL part)
  ✔ Reorganize VAOs @done(2015-10-29 15:06) @project(GL part)
  ✔ Fix shader compilation not returning an error when failing (use glGetShaderiv with GL_COMPILE_STATUS) @done(2015-10-29 15:59) @project(GL part)
  ✔ Add version option when compiling shaders @done(2015-10-29 15:44) @project(GL part)
  ✔ Implement BMP @done(2015-11-02 18:44) @project(GL part)
  ✔ Implement Texture @done(2015-11-02 20:07) @project(GL part)
  ✔ Let the user choose the active texture when binding @done(2015-11-02 20:07) @project(GL part)
