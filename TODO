General:

Objective-C formatting:
  ☐ Choose how to align labels
  ☐ Add more comments

Cocoa specific:
  ✔ Remove application t type @unsure @done(2015-10-20 21:59) @project(Cocoa specific)
  ✔ Separate functions for all window methods @done(2015-10-20 20:16) @project(Cocoa specific)
  ✔ Make use of Delegate or remove @done(2015-10-20 22:03) @project(Cocoa specific)
  ✔ Add menus to application @done(2015-10-20 21:34) @project(Cocoa specific)
  ☐ Add menus without plagiarizing SFML @option(parametrize)
  ☐ Menus should be clickable on launch @issue
  ✔ Implement applicationName of OGApplication @unsure @done(2015-10-20 21:14) @project(Cocoa specific)
  ✔ Close application when all windows are (through delegate probably) @done(2015-10-20 22:03) @project(Cocoa specific)
  ✔ Guarantee application is init only once @important @done(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Continue window implementation @done(2015-10-26 01:43) @project(Cocoa specific)
  ✘ See if close shouldn't be used instead of performClose @cancelled(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Remove quiting when all window closed @done(2015-10-26 01:46) @project(Cocoa specific)
  ☐ Add handling of events (like application quitting)
  ☐ Add some option to switch between Ctrl and Cmd @question
  ☐ Add some function to handle keyRepeatDelay and keyRepeatInterval for NSEvent
  ✔ Handle application creation and running with a boolean @done(2015-10-26 01:43) @project(Cocoa specific)
  ✔ Implement window destroy properly @done(2015-10-26 02:04) @project(Cocoa specific)

Xlib specific:
  ✔ Match on clientmessage in ogamlWindow_xlib for safety @done(2015-10-20 20:29) @project(Xlib specific)
  ✘ Avoid re-creating events (should profile before) -- takes 4e-7 sec @cancelled(2015-10-20 21:06) @project(Xlib specific)
  ✔ Remove unsafe casts of events @done(2015-10-20 21:10) @project(Xlib specific)
  ✔ Extract data from key presses @done(2015-10-21 16:42) @project(Xlib specific)
  ✔ Extract data from button presses @done(2015-10-21 12:55) @project(Xlib specific)
  ✔ Extract data from cursor movement @done(2015-10-21 16:57) @project(Xlib specific)
  ✔ Handle different keyboard layouts (and handle keys better) -- current version should be okay for a while @done(2015-10-23 09:46) @project(Xlib specific)
  ✔ Implement caml_glx_choose_visual @done(2015-10-23 23:01) @project(Xlib specific)
  ✔ Implement caml_glx_create_context @done(2015-10-23 23:24) @project(Xlib specific)
  ✔ Implement caml_glx_make_current @done(2015-10-23 23:24) @project(Xlib specific)
  ✔ Implement caml_glx_swap_buffers @done(2015-10-23 23:24) @project(Xlib specific)
  ☐ Correctly free glx calls when destroying window
  ☐ Binding GLX ** (later)

General:
  ☐ Make a log system ? @unsure

Window part:
  ✔ Add keys enumeration @done(2015-10-23 09:46) @project(Window part)
  ✔ Add buttons enumeration @done(2015-10-23 09:50) @project(Window part)
  ☐ Parameterize Keypressed/Keyreleased events with key @commented_out
  ☐ Parameterize Button events with position & button @commented_out
  ☐ Parameterize Movement events with position @commented_out
  ✘ Put shared code directly in ogamlWindow.ml (like the Event module ?) -- use packs @cancelled(2015-10-21 17:45) @project(Window part)
  ☐ Window titles
  ☐ Window attributes abstract type ? May contain title, size, etc @unsure
  ☐ Same for GL context attributes ? @unsure
  ☐ Real-time state Keyboard and Mouse module *
  ☐ Graphical functions display & clear - requires binding GLX for X11 **

Math part:
  ☐ Fix a notation convention
  ✔ Implement Vector3f @done(2015-10-24 10:07) @project(Math part)
  ✔ Write a Makefile @done(2015-10-24 10:12) @project(Math part)
  ☐ Write tests
  ✔ Implement Matrix3f @done(2015-10-24 11:10) @project(Math part)
  ☐ Implement Vector3i
  ✔ Add more complex functions to matrix3f (look_at, clipping, etc...) @done(2015-10-24 11:55) @project(Math part)
  ✔ Debug matrices... Really @done(2015-10-25 09:17) @project(Math part)
  ✔ Recode inverse matrices after debugging @done(2015-10-25 09:20) @project(Math part)
  ☐ Matrices exceptions (and centralized exceptions)
  ☐ Implement Quaternions
  ✔ Implement polygons @done(2015-10-26 16:33) @project(Math part)

GL part:
  ☐ Let the user choose the usage of a vbo when setting data
  ☐ Bind face culling, front_face
  ☐ Bind gl_enable and options
  ☐ Bind clear_color
  ✔ Bind shaders @done(2015-10-26 16:01) @project(GL part)
  ☐ Bind programs & locations
  ☐ Bind VAOs & attributes


